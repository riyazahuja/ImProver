[{"idx": 30, "error": "BAD REPL CALL:\n{'theorems': [], 'messages': [{'severity': 'error', 'pos': {'line': 4, 'column': 48}, 'endPos': None, 'data': 'expected token'}], 'env': 1}\n\n{\"cmd\": \"/-\\nCopyright (c) 2024 Joseph Tooby-Smith. All rights reserved.\\nReleased under Apache 2.0 license as described in the file LICENSE.\\nAuthors: Joseph Tooby-Smith\\n-/\\nimport HepLean.StandardModel.HiggsBoson.Potential\\nimport HepLean.Meta.TODO.Basic\\n/-!\\n\\n# The Two Higgs Doublet Model\\n\\nThe two Higgs doublet model is the standard model plus an additional Higgs doublet.\\n\\nCurrently this file contains the definition of the 2HDM potential.\\n\\n-/\\n\\nnamespace TwoHDM\\n\\nopen StandardModel\\nopen ComplexConjugate\\nopen HiggsField\\n\\nnoncomputable section\\n\\n/-- The parameters of the Two Higgs doublet model potential. -/\\nstructure Potential where\\n  /-- The parameter corresponding to `m\\u2081\\u2081\\u00b2` in the 2HDM potential. -/\\n  m\\u2081\\u20812 : \\u211d\\n  /-- The parameter corresponding to `m\\u2082\\u2082\\u00b2` in the 2HDM potential. -/\\n  m\\u2082\\u20822 : \\u211d\\n  /-- The parameter corresponding to `m\\u2081\\u2082\\u00b2` in the 2HDM potential. -/\\n  m\\u2081\\u20822 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2081` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2081 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2082` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2082 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2083` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2083 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2084` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2084 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2085` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2085 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2086` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2086 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2087` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2087 : \\u2102\\n\\nnamespace Potential\\n\\nvariable (P : Potential) (\\u03a61 \\u03a62 : HiggsField)\\n\\n/-- The potential of the two Higgs doublet model. -/\\ndef toFun (\\u03a61 \\u03a62 : HiggsField) (x : SpaceTime) : \\u211d :=\\n  P.m\\u2081\\u20812 * \\u2016\\u03a61\\u2016_H^2 x + P.m\\u2082\\u20822 * \\u2016\\u03a62\\u2016_H^2 x -\\n  (P.m\\u2081\\u20822 * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.m\\u2081\\u20822 * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n  + 1/2 * P.\\ud835\\udcf5\\u2081 * \\u2016\\u03a61\\u2016_H^2 x * \\u2016\\u03a61\\u2016_H^2 x + 1/2 * P.\\ud835\\udcf5\\u2082 * \\u2016\\u03a62\\u2016_H^2 x * \\u2016\\u03a62\\u2016_H^2 x\\n  + P.\\ud835\\udcf5\\u2083 * \\u2016\\u03a61\\u2016_H^2 x * \\u2016\\u03a62\\u2016_H^2 x\\n  + P.\\ud835\\udcf5\\u2084 * \\u2016\\u27ea\\u03a61, \\u03a62\\u27eb_H x\\u2016 ^ 2\\n  + (1/2 * P.\\ud835\\udcf5\\u2085 * \\u27ea\\u03a61, \\u03a62\\u27eb_H x ^ 2 + 1/2 * conj P.\\ud835\\udcf5\\u2085 * \\u27ea\\u03a62, \\u03a61\\u27eb_H x ^ 2).re\\n  + (P.\\ud835\\udcf5\\u2086 * \\u2016\\u03a61\\u2016_H^2 x * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.\\ud835\\udcf5\\u2086 * \\u2016\\u03a61\\u2016_H^2 x * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n  + (P.\\ud835\\udcf5\\u2087 * \\u2016\\u03a62\\u2016_H^2 x * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.\\ud835\\udcf5\\u2087 * \\u2016\\u03a62\\u2016_H^2 x * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n\\n/-- The potential where all parameters are zero. -/\\ndef zero : Potential := \\u27e80, 0, 0, 0, 0, 0, 0, 0, 0, 0\\u27e9\"}\n\n{\"cmd\": \"\\n\\nlemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61  := by\\n  funext x\\n  simp [toFun, Complex.abs_conj, InnerProductSpace.conj_symm]\\n  ring_nf\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}\n\n{\"cmd\": \"\\n\\nlemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61  := by\\n  funext x\\n  simp only [toFun, Complex.norm_eq_abs, Complex.abs_conj, Complex.re_eq_self] \\n  ring\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}\n\n{\"cmd\": \"\\n\\nlemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61  := by\\n  funext x\\n  simp [toFun, Complex.conj_re, Complex.conj_im, Complex.add_re, Complex.sub_neg_eq_add, one_div, Complex.re_ofNat, Complex.norm_eq_abs, Complex.abs_eq_abs_conj]\\n  ring_nf\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}"}, {"idx": 30, "error": "BAD REPL CALL:\n{'theorems': [], 'messages': [{'severity': 'error', 'pos': {'line': 2, 'column': 48}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 17, 'column': 43}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 29, 'column': 43}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 34, 'column': 47}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 46, 'column': 47}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 53, 'column': 7}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 71, 'column': 7}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 96, 'column': 43}, 'endPos': None, 'data': 'expected token'}], 'env': 1}\n\n{\"cmd\": \"/-\\nCopyright (c) 2024 Joseph Tooby-Smith. All rights reserved.\\nReleased under Apache 2.0 license as described in the file LICENSE.\\nAuthors: Joseph Tooby-Smith\\n-/\\nimport HepLean.StandardModel.HiggsBoson.Potential\\nimport HepLean.Meta.TODO.Basic\\n/-!\\n\\n# The Two Higgs Doublet Model\\n\\nThe two Higgs doublet model is the standard model plus an additional Higgs doublet.\\n\\nCurrently this file contains the definition of the 2HDM potential.\\n\\n-/\\n\\nnamespace TwoHDM\\n\\nopen StandardModel\\nopen ComplexConjugate\\nopen HiggsField\\n\\nnoncomputable section\\n\\n/-- The parameters of the Two Higgs doublet model potential. -/\\nstructure Potential where\\n  /-- The parameter corresponding to `m\\u2081\\u2081\\u00b2` in the 2HDM potential. -/\\n  m\\u2081\\u20812 : \\u211d\\n  /-- The parameter corresponding to `m\\u2082\\u2082\\u00b2` in the 2HDM potential. -/\\n  m\\u2082\\u20822 : \\u211d\\n  /-- The parameter corresponding to `m\\u2081\\u2082\\u00b2` in the 2HDM potential. -/\\n  m\\u2081\\u20822 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2081` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2081 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2082` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2082 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2083` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2083 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2084` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2084 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2085` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2085 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2086` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2086 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2087` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2087 : \\u2102\\n\\nnamespace Potential\\n\\nvariable (P : Potential) (\\u03a61 \\u03a62 : HiggsField)\\n\\n/-- The potential of the two Higgs doublet model. -/\\ndef toFun (\\u03a61 \\u03a62 : HiggsField) (x : SpaceTime) : \\u211d :=\\n  P.m\\u2081\\u20812 * \\u2016\\u03a61\\u2016_H^2 x + P.m\\u2082\\u20822 * \\u2016\\u03a62\\u2016_H^2 x -\\n  (P.m\\u2081\\u20822 * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.m\\u2081\\u20822 * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n  + 1/2 * P.\\ud835\\udcf5\\u2081 * \\u2016\\u03a61\\u2016_H^2 x * \\u2016\\u03a61\\u2016_H^2 x + 1/2 * P.\\ud835\\udcf5\\u2082 * \\u2016\\u03a62\\u2016_H^2 x * \\u2016\\u03a62\\u2016_H^2 x\\n  + P.\\ud835\\udcf5\\u2083 * \\u2016\\u03a61\\u2016_H^2 x * \\u2016\\u03a62\\u2016_H^2 x\\n  + P.\\ud835\\udcf5\\u2084 * \\u2016\\u27ea\\u03a61, \\u03a62\\u27eb_H x\\u2016 ^ 2\\n  + (1/2 * P.\\ud835\\udcf5\\u2085 * \\u27ea\\u03a61, \\u03a62\\u27eb_H x ^ 2 + 1/2 * conj P.\\ud835\\udcf5\\u2085 * \\u27ea\\u03a62, \\u03a61\\u27eb_H x ^ 2).re\\n  + (P.\\ud835\\udcf5\\u2086 * \\u2016\\u03a61\\u2016_H^2 x * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.\\ud835\\udcf5\\u2086 * \\u2016\\u03a61\\u2016_H^2 x * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n  + (P.\\ud835\\udcf5\\u2087 * \\u2016\\u03a62\\u2016_H^2 x * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.\\ud835\\udcf5\\u2087 * \\u2016\\u03a62\\u2016_H^2 x * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n\\n/-- The potential where all parameters are zero. -/\\ndef zero : Potential := \\u27e80, 0, 0, 0, 0, 0, 0, 0, 0, 0\\u27e9\\n\"}\n\n{\"cmd\": \"lemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, Complex.add_re, Complex.mul_re, Complex.conj_re, Complex.conj_im,\\n    neg_mul, sub_neg_eq_add, one_div, Complex.norm_eq_abs, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, mul_neg, Complex.ofReal_pow, normSq_apply_re_self,\\n    normSq_apply_im_zero, mul_zero, zero_add, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n  ring_nf\\n  simp only [one_div, add_left_inj, add_right_inj, mul_eq_mul_left_iff]\\n  left\\n  rw [HiggsField.innerProd, HiggsField.innerProd, \\u2190 InnerProductSpace.conj_symm, Complex.abs_conj]\\n\\n/-- If `\\u03a6\\u2082` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2081`. -/\\nlemma right_zero : P.toFun \\u03a61 0 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_zero, Pi.zero_apply, norm_zero, ne_eq,\\n    OfNat.ofNat_ne_zero, not_false_eq_true, zero_pow, mul_zero, add_zero, innerProd_right_zero,\\n    innerProd_left_zero, Complex.zero_re, sub_zero, one_div, Complex.ofReal_pow,\\n    Complex.ofReal_zero, neg_neg, add_right_inj, mul_eq_mul_right_iff, pow_eq_zero_iff,\\n    norm_eq_zero, HiggsField.Potential.toFun, or_self_right]\\n  ring_nf\\n  simp only [true_or]\\n\\n/-- If `\\u03a6\\u2081` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2082`. -/\\nlemma left_zero : P.toFun 0 \\u03a62 =\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).toFun \\u03a62 := by\\n  rw [swap_fields, right_zero]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_left : P.toFun (- \\u03a61) \\u03a62\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_neg, Pi.neg_apply, norm_neg,\\n    innerProd_neg_left, mul_neg, innerProd_neg_right, Complex.add_re, Complex.neg_re,\\n    Complex.mul_re, neg_sub, Complex.conj_re, Complex.conj_im, neg_mul, sub_neg_eq_add, neg_add_rev,\\n    one_div, Complex.norm_eq_abs, even_two, Even.neg_pow, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, Complex.ofReal_pow, map_neg]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_right : P.toFun \\u03a61 (- \\u03a62)\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  rw [swap_fields, neg_left, swap_fields]\\n  simp only [map_neg, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n\\nlemma left_eq_right : P.toFun \\u03a61 \\u03a61 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 + 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re + 2 * P.\\ud835\\udcf5\\u2086.re + 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, innerProd_self_eq_normSq, Complex.ofReal_pow, Complex.add_re,\\n    Complex.mul_re, normSq_apply_re_self, normSq_apply_im_zero, mul_zero, sub_zero, Complex.conj_re,\\n    Complex.conj_im, one_div, norm_pow, Complex.norm_real, norm_norm, Complex.inv_re,\\n    Complex.re_ofNat, Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat,\\n    neg_zero, zero_div, zero_mul, Complex.mul_im, add_zero, mul_neg, neg_mul, sub_neg_eq_add,\\n    sub_add_add_cancel, zero_add, HiggsField.Potential.toFun, neg_add_rev, neg_sub]\\n  ring_nf\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 4).re = \\u2016\\u03a61 x\\u2016 ^ 4 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 2).re = \\u2016\\u03a61 x\\u2016 ^ 2 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show (Complex.ofRealHom \\u2016\\u03a61 x\\u2016 ^ 2).im = 0 by exact normSq_apply_im_zero \\u03a61 x]\\n  ring\\n\\nlemma left_eq_neg_right : P.toFun \\u03a61 (- \\u03a61) =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 - 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re - 2 * P.\\ud835\\udcf5\\u2086.re - 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  rw [neg_right, left_eq_right]\\n  simp_all only [Complex.neg_re, mul_neg]\\n  rfl\\n\\n/-!\\n\\n## Potential bounded from below\\n\\n-/\\n\\nTODO \\\"Prove bounded properties of the 2HDM potential.\\n  See e.g. https://inspirehep.net/literature/201299 and\\n  https://arxiv.org/pdf/hep-ph/0605184.\\\"\\n\\n/-- The proposition on the coefficients for a potential to be bounded. -/\\ndef IsBounded : Prop :=\\n  \\u2203 c, \\u2200 \\u03a61 \\u03a62 x, c \\u2264 P.toFun \\u03a61 \\u03a62 x\\n\\nsection IsBounded\\n\\nvariable {P : Potential}\\n\\n\\nlemma isBounded_right_zero (h : P.IsBounded) :\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).IsBounded  := by\\n  rcases h with \\u27e8c, hc\\u27e9\\n  use c\\n  intro \\u03a6 x\\n  rw [right_zero]\\n  exact hc \\u03a6 0 x\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}\n\n{\"cmd\": \"lemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, Complex.add_re, Complex.mul_re, Complex.conj_re, Complex.conj_im,\\n    neg_mul, sub_neg_eq_add, one_div, Complex.norm_eq_abs, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, mul_neg, Complex.ofReal_pow, normSq_apply_re_self,\\n    normSq_apply_im_zero, mul_zero, zero_add, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n  ring_nf\\n  simp only [one_div, add_left_inj, add_right_inj, mul_eq_mul_left_iff]\\n  left\\n  rw [HiggsField.innerProd, HiggsField.innerProd, \\u2190 InnerProductSpace.conj_symm, Complex.abs_conj]\\n\\n/-- If `\\u03a6\\u2082` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2081`. -/\\nlemma right_zero : P.toFun \\u03a61 0 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_zero, Pi.zero_apply, norm_zero, ne_eq,\\n    OfNat.ofNat_ne_zero, not_false_eq_true, zero_pow, mul_zero, add_zero, innerProd_right_zero,\\n    innerProd_left_zero, Complex.zero_re, sub_zero, one_div, Complex.ofReal_pow,\\n    Complex.ofReal_zero, neg_neg, add_right_inj, mul_eq_mul_right_iff, pow_eq_zero_iff,\\n    norm_eq_zero, HiggsField.Potential.toFun, or_self_right]\\n  ring_nf\\n  simp only [true_or]\\n\\n/-- If `\\u03a6\\u2081` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2082`. -/\\nlemma left_zero : P.toFun 0 \\u03a62 =\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).toFun \\u03a62 := by\\n  rw [swap_fields, right_zero]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_left : P.toFun (- \\u03a61) \\u03a62\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_neg, Pi.neg_apply, norm_neg,\\n    innerProd_neg_left, mul_neg, innerProd_neg_right, Complex.add_re, Complex.neg_re,\\n    Complex.mul_re, neg_sub, Complex.conj_re, Complex.conj_im, neg_mul, sub_neg_eq_add, neg_add_rev,\\n    one_div, Complex.norm_eq_abs, even_two, Even.neg_pow, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, Complex.ofReal_pow, map_neg]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_right : P.toFun \\u03a61 (- \\u03a62)\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  rw [swap_fields, neg_left, swap_fields]\\n  simp only [map_neg, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n\\nlemma left_eq_right : P.toFun \\u03a61 \\u03a61 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 + 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re + 2 * P.\\ud835\\udcf5\\u2086.re + 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, innerProd_self_eq_normSq, Complex.ofReal_pow, Complex.add_re,\\n    Complex.mul_re, normSq_apply_re_self, normSq_apply_im_zero, mul_zero, sub_zero, Complex.conj_re,\\n    Complex.conj_im, one_div, norm_pow, Complex.norm_real, norm_norm, Complex.inv_re,\\n    Complex.re_ofNat, Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat,\\n    neg_zero, zero_div, zero_mul, Complex.mul_im, add_zero, mul_neg, neg_mul, sub_neg_eq_add,\\n    sub_add_add_cancel, zero_add, HiggsField.Potential.toFun, neg_add_rev, neg_sub]\\n  ring_nf\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 4).re = \\u2016\\u03a61 x\\u2016 ^ 4 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 2).re = \\u2016\\u03a61 x\\u2016 ^ 2 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show (Complex.ofRealHom \\u2016\\u03a61 x\\u2016 ^ 2).im = 0 by exact normSq_apply_im_zero \\u03a61 x]\\n  ring\\n\\nlemma left_eq_neg_right : P.toFun \\u03a61 (- \\u03a61) =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 - 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re - 2 * P.\\ud835\\udcf5\\u2086.re - 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  rw [neg_right, left_eq_right]\\n  simp_all only [Complex.neg_re, mul_neg]\\n  rfl\\n\\n/-!\\n\\n## Potential bounded from below\\n\\n-/\\n\\nTODO \\\"Prove bounded properties of the 2HDM potential.\\n  See e.g. https://inspirehep.net/literature/201299 and\\n  https://arxiv.org/pdf/hep-ph/0605184.\\\"\\n\\n/-- The proposition on the coefficients for a potential to be bounded. -/\\ndef IsBounded : Prop :=\\n  \\u2203 c, \\u2200 \\u03a61 \\u03a62 x, c \\u2264 P.toFun \\u03a61 \\u03a62 x\\n\\nsection IsBounded\\n\\nvariable {P : Potential}\\n\\n\\nlemma isBounded_right_zero (h : P.IsBounded) :\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).IsBounded  := by\\n  obtain \\u27e8c, hc\\u27e9 := h\\n  use c\\n  exact fun \\u03a6 x => by rw [right_zero]; exact hc \\u03a6 0 x\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}\n\n{\"cmd\": \"lemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, Complex.add_re, Complex.mul_re, Complex.conj_re, Complex.conj_im,\\n    neg_mul, sub_neg_eq_add, one_div, Complex.norm_eq_abs, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, mul_neg, Complex.ofReal_pow, normSq_apply_re_self,\\n    normSq_apply_im_zero, mul_zero, zero_add, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n  ring_nf\\n  simp only [one_div, add_left_inj, add_right_inj, mul_eq_mul_left_iff]\\n  left\\n  rw [HiggsField.innerProd, HiggsField.innerProd, \\u2190 InnerProductSpace.conj_symm, Complex.abs_conj]\\n\\n/-- If `\\u03a6\\u2082` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2081`. -/\\nlemma right_zero : P.toFun \\u03a61 0 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_zero, Pi.zero_apply, norm_zero, ne_eq,\\n    OfNat.ofNat_ne_zero, not_false_eq_true, zero_pow, mul_zero, add_zero, innerProd_right_zero,\\n    innerProd_left_zero, Complex.zero_re, sub_zero, one_div, Complex.ofReal_pow,\\n    Complex.ofReal_zero, neg_neg, add_right_inj, mul_eq_mul_right_iff, pow_eq_zero_iff,\\n    norm_eq_zero, HiggsField.Potential.toFun, or_self_right]\\n  ring_nf\\n  simp only [true_or]\\n\\n/-- If `\\u03a6\\u2081` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2082`. -/\\nlemma left_zero : P.toFun 0 \\u03a62 =\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).toFun \\u03a62 := by\\n  rw [swap_fields, right_zero]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_left : P.toFun (- \\u03a61) \\u03a62\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_neg, Pi.neg_apply, norm_neg,\\n    innerProd_neg_left, mul_neg, innerProd_neg_right, Complex.add_re, Complex.neg_re,\\n    Complex.mul_re, neg_sub, Complex.conj_re, Complex.conj_im, neg_mul, sub_neg_eq_add, neg_add_rev,\\n    one_div, Complex.norm_eq_abs, even_two, Even.neg_pow, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, Complex.ofReal_pow, map_neg]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_right : P.toFun \\u03a61 (- \\u03a62)\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  rw [swap_fields, neg_left, swap_fields]\\n  simp only [map_neg, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n\\nlemma left_eq_right : P.toFun \\u03a61 \\u03a61 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 + 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re + 2 * P.\\ud835\\udcf5\\u2086.re + 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, innerProd_self_eq_normSq, Complex.ofReal_pow, Complex.add_re,\\n    Complex.mul_re, normSq_apply_re_self, normSq_apply_im_zero, mul_zero, sub_zero, Complex.conj_re,\\n    Complex.conj_im, one_div, norm_pow, Complex.norm_real, norm_norm, Complex.inv_re,\\n    Complex.re_ofNat, Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat,\\n    neg_zero, zero_div, zero_mul, Complex.mul_im, add_zero, mul_neg, neg_mul, sub_neg_eq_add,\\n    sub_add_add_cancel, zero_add, HiggsField.Potential.toFun, neg_add_rev, neg_sub]\\n  ring_nf\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 4).re = \\u2016\\u03a61 x\\u2016 ^ 4 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 2).re = \\u2016\\u03a61 x\\u2016 ^ 2 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show (Complex.ofRealHom \\u2016\\u03a61 x\\u2016 ^ 2).im = 0 by exact normSq_apply_im_zero \\u03a61 x]\\n  ring\\n\\nlemma left_eq_neg_right : P.toFun \\u03a61 (- \\u03a61) =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 - 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re - 2 * P.\\ud835\\udcf5\\u2086.re - 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  rw [neg_right, left_eq_right]\\n  simp_all only [Complex.neg_re, mul_neg]\\n  rfl\\n\\n/-!\\n\\n## Potential bounded from below\\n\\n-/\\n\\nTODO \\\"Prove bounded properties of the 2HDM potential.\\n  See e.g. https://inspirehep.net/literature/201299 and\\n  https://arxiv.org/pdf/hep-ph/0605184.\\\"\\n\\n/-- The proposition on the coefficients for a potential to be bounded. -/\\ndef IsBounded : Prop :=\\n  \\u2203 c, \\u2200 \\u03a61 \\u03a62 x, c \\u2264 P.toFun \\u03a61 \\u03a62 x\\n\\nsection IsBounded\\n\\nvariable {P : Potential}\\n\\n\\nlemma isBounded_right_zero (h : P.IsBounded) :\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).IsBounded  := by\\n  obtain \\u27e8c, hc\\u27e9 := h\\n  use c\\n  intro \\u03a6 x\\n  rw [right_zero] at hc\\n  exact hc \\u03a6 0 x\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}"}, {"idx": 30, "error": "BAD REPL CALL:\n{'theorems': [], 'messages': [{'severity': 'error', 'pos': {'line': 2, 'column': 48}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 17, 'column': 43}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 29, 'column': 43}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 34, 'column': 47}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 46, 'column': 47}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 53, 'column': 7}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 71, 'column': 7}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 95, 'column': 43}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 105, 'column': 43}, 'endPos': None, 'data': 'expected token'}], 'env': 1}\n\n{\"cmd\": \"/-\\nCopyright (c) 2024 Joseph Tooby-Smith. All rights reserved.\\nReleased under Apache 2.0 license as described in the file LICENSE.\\nAuthors: Joseph Tooby-Smith\\n-/\\nimport HepLean.StandardModel.HiggsBoson.Potential\\nimport HepLean.Meta.TODO.Basic\\n/-!\\n\\n# The Two Higgs Doublet Model\\n\\nThe two Higgs doublet model is the standard model plus an additional Higgs doublet.\\n\\nCurrently this file contains the definition of the 2HDM potential.\\n\\n-/\\n\\nnamespace TwoHDM\\n\\nopen StandardModel\\nopen ComplexConjugate\\nopen HiggsField\\n\\nnoncomputable section\\n\\n/-- The parameters of the Two Higgs doublet model potential. -/\\nstructure Potential where\\n  /-- The parameter corresponding to `m\\u2081\\u2081\\u00b2` in the 2HDM potential. -/\\n  m\\u2081\\u20812 : \\u211d\\n  /-- The parameter corresponding to `m\\u2082\\u2082\\u00b2` in the 2HDM potential. -/\\n  m\\u2082\\u20822 : \\u211d\\n  /-- The parameter corresponding to `m\\u2081\\u2082\\u00b2` in the 2HDM potential. -/\\n  m\\u2081\\u20822 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2081` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2081 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2082` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2082 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2083` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2083 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2084` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2084 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2085` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2085 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2086` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2086 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2087` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2087 : \\u2102\\n\\nnamespace Potential\\n\\nvariable (P : Potential) (\\u03a61 \\u03a62 : HiggsField)\\n\\n/-- The potential of the two Higgs doublet model. -/\\ndef toFun (\\u03a61 \\u03a62 : HiggsField) (x : SpaceTime) : \\u211d :=\\n  P.m\\u2081\\u20812 * \\u2016\\u03a61\\u2016_H^2 x + P.m\\u2082\\u20822 * \\u2016\\u03a62\\u2016_H^2 x -\\n  (P.m\\u2081\\u20822 * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.m\\u2081\\u20822 * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n  + 1/2 * P.\\ud835\\udcf5\\u2081 * \\u2016\\u03a61\\u2016_H^2 x * \\u2016\\u03a61\\u2016_H^2 x + 1/2 * P.\\ud835\\udcf5\\u2082 * \\u2016\\u03a62\\u2016_H^2 x * \\u2016\\u03a62\\u2016_H^2 x\\n  + P.\\ud835\\udcf5\\u2083 * \\u2016\\u03a61\\u2016_H^2 x * \\u2016\\u03a62\\u2016_H^2 x\\n  + P.\\ud835\\udcf5\\u2084 * \\u2016\\u27ea\\u03a61, \\u03a62\\u27eb_H x\\u2016 ^ 2\\n  + (1/2 * P.\\ud835\\udcf5\\u2085 * \\u27ea\\u03a61, \\u03a62\\u27eb_H x ^ 2 + 1/2 * conj P.\\ud835\\udcf5\\u2085 * \\u27ea\\u03a62, \\u03a61\\u27eb_H x ^ 2).re\\n  + (P.\\ud835\\udcf5\\u2086 * \\u2016\\u03a61\\u2016_H^2 x * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.\\ud835\\udcf5\\u2086 * \\u2016\\u03a61\\u2016_H^2 x * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n  + (P.\\ud835\\udcf5\\u2087 * \\u2016\\u03a62\\u2016_H^2 x * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.\\ud835\\udcf5\\u2087 * \\u2016\\u03a62\\u2016_H^2 x * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n\\n/-- The potential where all parameters are zero. -/\\ndef zero : Potential := \\u27e80, 0, 0, 0, 0, 0, 0, 0, 0, 0\\u27e9\\n\"}\n\n{\"cmd\": \"lemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, Complex.add_re, Complex.mul_re, Complex.conj_re, Complex.conj_im,\\n    neg_mul, sub_neg_eq_add, one_div, Complex.norm_eq_abs, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, mul_neg, Complex.ofReal_pow, normSq_apply_re_self,\\n    normSq_apply_im_zero, mul_zero, zero_add, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n  ring_nf\\n  simp only [one_div, add_left_inj, add_right_inj, mul_eq_mul_left_iff]\\n  left\\n  rw [HiggsField.innerProd, HiggsField.innerProd, \\u2190 InnerProductSpace.conj_symm, Complex.abs_conj]\\n\\n/-- If `\\u03a6\\u2082` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2081`. -/\\nlemma right_zero : P.toFun \\u03a61 0 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_zero, Pi.zero_apply, norm_zero, ne_eq,\\n    OfNat.ofNat_ne_zero, not_false_eq_true, zero_pow, mul_zero, add_zero, innerProd_right_zero,\\n    innerProd_left_zero, Complex.zero_re, sub_zero, one_div, Complex.ofReal_pow,\\n    Complex.ofReal_zero, neg_neg, add_right_inj, mul_eq_mul_right_iff, pow_eq_zero_iff,\\n    norm_eq_zero, HiggsField.Potential.toFun, or_self_right]\\n  ring_nf\\n  simp only [true_or]\\n\\n/-- If `\\u03a6\\u2081` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2082`. -/\\nlemma left_zero : P.toFun 0 \\u03a62 =\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).toFun \\u03a62 := by\\n  rw [swap_fields, right_zero]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_left : P.toFun (- \\u03a61) \\u03a62\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_neg, Pi.neg_apply, norm_neg,\\n    innerProd_neg_left, mul_neg, innerProd_neg_right, Complex.add_re, Complex.neg_re,\\n    Complex.mul_re, neg_sub, Complex.conj_re, Complex.conj_im, neg_mul, sub_neg_eq_add, neg_add_rev,\\n    one_div, Complex.norm_eq_abs, even_two, Even.neg_pow, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, Complex.ofReal_pow, map_neg]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_right : P.toFun \\u03a61 (- \\u03a62)\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  rw [swap_fields, neg_left, swap_fields]\\n  simp only [map_neg, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n\\nlemma left_eq_right : P.toFun \\u03a61 \\u03a61 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 + 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re + 2 * P.\\ud835\\udcf5\\u2086.re + 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, innerProd_self_eq_normSq, Complex.ofReal_pow, Complex.add_re,\\n    Complex.mul_re, normSq_apply_re_self, normSq_apply_im_zero, mul_zero, sub_zero, Complex.conj_re,\\n    Complex.conj_im, one_div, norm_pow, Complex.norm_real, norm_norm, Complex.inv_re,\\n    Complex.re_ofNat, Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat,\\n    neg_zero, zero_div, zero_mul, Complex.mul_im, add_zero, mul_neg, neg_mul, sub_neg_eq_add,\\n    sub_add_add_cancel, zero_add, HiggsField.Potential.toFun, neg_add_rev, neg_sub]\\n  ring_nf\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 4).re = \\u2016\\u03a61 x\\u2016 ^ 4 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 2).re = \\u2016\\u03a61 x\\u2016 ^ 2 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show (Complex.ofRealHom \\u2016\\u03a61 x\\u2016 ^ 2).im = 0 by exact normSq_apply_im_zero \\u03a61 x]\\n  ring\\n\\nlemma left_eq_neg_right : P.toFun \\u03a61 (- \\u03a61) =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 - 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re - 2 * P.\\ud835\\udcf5\\u2086.re - 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  rw [neg_right, left_eq_right]\\n  simp_all only [Complex.neg_re, mul_neg]\\n  rfl\\n\\n/-!\\n\\n## Potential bounded from below\\n\\n-/\\n\\nTODO \\\"Prove bounded properties of the 2HDM potential.\\n  See e.g. https://inspirehep.net/literature/201299 and\\n  https://arxiv.org/pdf/hep-ph/0605184.\\\"\\n\\n/-- The proposition on the coefficients for a potential to be bounded. -/\\ndef IsBounded : Prop :=\\n  \\u2203 c, \\u2200 \\u03a61 \\u03a62 x, c \\u2264 P.toFun \\u03a61 \\u03a62 x\\n\\nsection IsBounded\\n\\nvariable {P : Potential}\\n\\nlemma isBounded_right_zero (h : P.IsBounded) :\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).IsBounded := by\\n  obtain \\u27e8c, hc\\u27e9 := h\\n  use c\\n  intro \\u03a6 x\\n  have hc1 := hc \\u03a6 0 x\\n  rw [right_zero] at hc1\\n  exact hc1\\n\\n\\nlemma isBounded_left_zero (h : P.IsBounded) :\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).IsBounded  := by\\n  obtain \\u27e8c, hc\\u27e9 := h\\n  use c\\n  intro \\u03a6 x\\n  rw [left_zero]\\n  exact hc 0 \\u03a6 x\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}\n\n{\"cmd\": \"lemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, Complex.add_re, Complex.mul_re, Complex.conj_re, Complex.conj_im,\\n    neg_mul, sub_neg_eq_add, one_div, Complex.norm_eq_abs, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, mul_neg, Complex.ofReal_pow, normSq_apply_re_self,\\n    normSq_apply_im_zero, mul_zero, zero_add, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n  ring_nf\\n  simp only [one_div, add_left_inj, add_right_inj, mul_eq_mul_left_iff]\\n  left\\n  rw [HiggsField.innerProd, HiggsField.innerProd, \\u2190 InnerProductSpace.conj_symm, Complex.abs_conj]\\n\\n/-- If `\\u03a6\\u2082` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2081`. -/\\nlemma right_zero : P.toFun \\u03a61 0 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_zero, Pi.zero_apply, norm_zero, ne_eq,\\n    OfNat.ofNat_ne_zero, not_false_eq_true, zero_pow, mul_zero, add_zero, innerProd_right_zero,\\n    innerProd_left_zero, Complex.zero_re, sub_zero, one_div, Complex.ofReal_pow,\\n    Complex.ofReal_zero, neg_neg, add_right_inj, mul_eq_mul_right_iff, pow_eq_zero_iff,\\n    norm_eq_zero, HiggsField.Potential.toFun, or_self_right]\\n  ring_nf\\n  simp only [true_or]\\n\\n/-- If `\\u03a6\\u2081` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2082`. -/\\nlemma left_zero : P.toFun 0 \\u03a62 =\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).toFun \\u03a62 := by\\n  rw [swap_fields, right_zero]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_left : P.toFun (- \\u03a61) \\u03a62\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_neg, Pi.neg_apply, norm_neg,\\n    innerProd_neg_left, mul_neg, innerProd_neg_right, Complex.add_re, Complex.neg_re,\\n    Complex.mul_re, neg_sub, Complex.conj_re, Complex.conj_im, neg_mul, sub_neg_eq_add, neg_add_rev,\\n    one_div, Complex.norm_eq_abs, even_two, Even.neg_pow, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, Complex.ofReal_pow, map_neg]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_right : P.toFun \\u03a61 (- \\u03a62)\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  rw [swap_fields, neg_left, swap_fields]\\n  simp only [map_neg, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n\\nlemma left_eq_right : P.toFun \\u03a61 \\u03a61 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 + 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re + 2 * P.\\ud835\\udcf5\\u2086.re + 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, innerProd_self_eq_normSq, Complex.ofReal_pow, Complex.add_re,\\n    Complex.mul_re, normSq_apply_re_self, normSq_apply_im_zero, mul_zero, sub_zero, Complex.conj_re,\\n    Complex.conj_im, one_div, norm_pow, Complex.norm_real, norm_norm, Complex.inv_re,\\n    Complex.re_ofNat, Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat,\\n    neg_zero, zero_div, zero_mul, Complex.mul_im, add_zero, mul_neg, neg_mul, sub_neg_eq_add,\\n    sub_add_add_cancel, zero_add, HiggsField.Potential.toFun, neg_add_rev, neg_sub]\\n  ring_nf\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 4).re = \\u2016\\u03a61 x\\u2016 ^ 4 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 2).re = \\u2016\\u03a61 x\\u2016 ^ 2 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show (Complex.ofRealHom \\u2016\\u03a61 x\\u2016 ^ 2).im = 0 by exact normSq_apply_im_zero \\u03a61 x]\\n  ring\\n\\nlemma left_eq_neg_right : P.toFun \\u03a61 (- \\u03a61) =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 - 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re - 2 * P.\\ud835\\udcf5\\u2086.re - 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  rw [neg_right, left_eq_right]\\n  simp_all only [Complex.neg_re, mul_neg]\\n  rfl\\n\\n/-!\\n\\n## Potential bounded from below\\n\\n-/\\n\\nTODO \\\"Prove bounded properties of the 2HDM potential.\\n  See e.g. https://inspirehep.net/literature/201299 and\\n  https://arxiv.org/pdf/hep-ph/0605184.\\\"\\n\\n/-- The proposition on the coefficients for a potential to be bounded. -/\\ndef IsBounded : Prop :=\\n  \\u2203 c, \\u2200 \\u03a61 \\u03a62 x, c \\u2264 P.toFun \\u03a61 \\u03a62 x\\n\\nsection IsBounded\\n\\nvariable {P : Potential}\\n\\nlemma isBounded_right_zero (h : P.IsBounded) :\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).IsBounded := by\\n  obtain \\u27e8c, hc\\u27e9 := h\\n  use c\\n  intro \\u03a6 x\\n  have hc1 := hc \\u03a6 0 x\\n  rw [right_zero] at hc1\\n  exact hc1\\n\\n\\nlemma isBounded_left_zero (h : P.IsBounded) :\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).IsBounded  := by\\n  obtain \\u27e8c, hc\\u27e9 := h\\n  use c\\n  intro \\u03a6 x\\n  exact (hc 0 \\u03a6 x).trans_eq (left_zero.symm)\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}\n\n{\"cmd\": \"lemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, Complex.add_re, Complex.mul_re, Complex.conj_re, Complex.conj_im,\\n    neg_mul, sub_neg_eq_add, one_div, Complex.norm_eq_abs, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, mul_neg, Complex.ofReal_pow, normSq_apply_re_self,\\n    normSq_apply_im_zero, mul_zero, zero_add, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n  ring_nf\\n  simp only [one_div, add_left_inj, add_right_inj, mul_eq_mul_left_iff]\\n  left\\n  rw [HiggsField.innerProd, HiggsField.innerProd, \\u2190 InnerProductSpace.conj_symm, Complex.abs_conj]\\n\\n/-- If `\\u03a6\\u2082` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2081`. -/\\nlemma right_zero : P.toFun \\u03a61 0 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_zero, Pi.zero_apply, norm_zero, ne_eq,\\n    OfNat.ofNat_ne_zero, not_false_eq_true, zero_pow, mul_zero, add_zero, innerProd_right_zero,\\n    innerProd_left_zero, Complex.zero_re, sub_zero, one_div, Complex.ofReal_pow,\\n    Complex.ofReal_zero, neg_neg, add_right_inj, mul_eq_mul_right_iff, pow_eq_zero_iff,\\n    norm_eq_zero, HiggsField.Potential.toFun, or_self_right]\\n  ring_nf\\n  simp only [true_or]\\n\\n/-- If `\\u03a6\\u2081` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2082`. -/\\nlemma left_zero : P.toFun 0 \\u03a62 =\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).toFun \\u03a62 := by\\n  rw [swap_fields, right_zero]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_left : P.toFun (- \\u03a61) \\u03a62\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_neg, Pi.neg_apply, norm_neg,\\n    innerProd_neg_left, mul_neg, innerProd_neg_right, Complex.add_re, Complex.neg_re,\\n    Complex.mul_re, neg_sub, Complex.conj_re, Complex.conj_im, neg_mul, sub_neg_eq_add, neg_add_rev,\\n    one_div, Complex.norm_eq_abs, even_two, Even.neg_pow, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, Complex.ofReal_pow, map_neg]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_right : P.toFun \\u03a61 (- \\u03a62)\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  rw [swap_fields, neg_left, swap_fields]\\n  simp only [map_neg, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n\\nlemma left_eq_right : P.toFun \\u03a61 \\u03a61 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 + 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re + 2 * P.\\ud835\\udcf5\\u2086.re + 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, innerProd_self_eq_normSq, Complex.ofReal_pow, Complex.add_re,\\n    Complex.mul_re, normSq_apply_re_self, normSq_apply_im_zero, mul_zero, sub_zero, Complex.conj_re,\\n    Complex.conj_im, one_div, norm_pow, Complex.norm_real, norm_norm, Complex.inv_re,\\n    Complex.re_ofNat, Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat,\\n    neg_zero, zero_div, zero_mul, Complex.mul_im, add_zero, mul_neg, neg_mul, sub_neg_eq_add,\\n    sub_add_add_cancel, zero_add, HiggsField.Potential.toFun, neg_add_rev, neg_sub]\\n  ring_nf\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 4).re = \\u2016\\u03a61 x\\u2016 ^ 4 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 2).re = \\u2016\\u03a61 x\\u2016 ^ 2 by\\n    erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show (Complex.ofRealHom \\u2016\\u03a61 x\\u2016 ^ 2).im = 0 by exact normSq_apply_im_zero \\u03a61 x]\\n  ring\\n\\nlemma left_eq_neg_right : P.toFun \\u03a61 (- \\u03a61) =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 - 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re - 2 * P.\\ud835\\udcf5\\u2086.re - 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61 := by\\n  rw [neg_right, left_eq_right]\\n  simp_all only [Complex.neg_re, mul_neg]\\n  rfl\\n\\n/-!\\n\\n## Potential bounded from below\\n\\n-/\\n\\nTODO \\\"Prove bounded properties of the 2HDM potential.\\n  See e.g. https://inspirehep.net/literature/201299 and\\n  https://arxiv.org/pdf/hep-ph/0605184.\\\"\\n\\n/-- The proposition on the coefficients for a potential to be bounded. -/\\ndef IsBounded : Prop :=\\n  \\u2203 c, \\u2200 \\u03a61 \\u03a62 x, c \\u2264 P.toFun \\u03a61 \\u03a62 x\\n\\nsection IsBounded\\n\\nvariable {P : Potential}\\n\\nlemma isBounded_right_zero (h : P.IsBounded) :\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).IsBounded := by\\n  obtain \\u27e8c, hc\\u27e9 := h\\n  use c\\n  intro \\u03a6 x\\n  have hc1 := hc \\u03a6 0 x\\n  rw [right_zero] at hc1\\n  exact hc1\\n\\n\\nlemma isBounded_left_zero (h : P.IsBounded) :\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).IsBounded  := by\\n  obtain \\u27e8c, hc\\u27e9 := h\\n  use c\\n  intro \\u03a6 x\\n  rw [left_zero]\\n  exact hc 0 \\u03a6 x\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}"}, {"idx": 30, "error": "BAD REPL CALL:\n{'theorems': [], 'messages': [{'severity': 'error', 'pos': {'line': 2, 'column': 48}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 17, 'column': 43}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 29, 'column': 43}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 34, 'column': 47}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 46, 'column': 47}, 'endPos': None, 'data': 'expected token'}, {'severity': 'error', 'pos': {'line': 54, 'column': 7}, 'endPos': None, 'data': 'expected token'}], 'env': 1}\n\n{\"cmd\": \"/-\\nCopyright (c) 2024 Joseph Tooby-Smith. All rights reserved.\\nReleased under Apache 2.0 license as described in the file LICENSE.\\nAuthors: Joseph Tooby-Smith\\n-/\\nimport HepLean.StandardModel.HiggsBoson.Potential\\nimport HepLean.Meta.TODO.Basic\\n/-!\\n\\n# The Two Higgs Doublet Model\\n\\nThe two Higgs doublet model is the standard model plus an additional Higgs doublet.\\n\\nCurrently this file contains the definition of the 2HDM potential.\\n\\n-/\\n\\nnamespace TwoHDM\\n\\nopen StandardModel\\nopen ComplexConjugate\\nopen HiggsField\\n\\nnoncomputable section\\n\\n/-- The parameters of the Two Higgs doublet model potential. -/\\nstructure Potential where\\n  /-- The parameter corresponding to `m\\u2081\\u2081\\u00b2` in the 2HDM potential. -/\\n  m\\u2081\\u20812 : \\u211d\\n  /-- The parameter corresponding to `m\\u2082\\u2082\\u00b2` in the 2HDM potential. -/\\n  m\\u2082\\u20822 : \\u211d\\n  /-- The parameter corresponding to `m\\u2081\\u2082\\u00b2` in the 2HDM potential. -/\\n  m\\u2081\\u20822 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2081` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2081 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2082` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2082 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2083` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2083 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2084` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2084 : \\u211d\\n  /-- The parameter corresponding to `\\u03bb\\u2085` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2085 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2086` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2086 : \\u2102\\n  /-- The parameter corresponding to `\\u03bb\\u2087` in the 2HDM potential. -/\\n  \\ud835\\udcf5\\u2087 : \\u2102\\n\\nnamespace Potential\\n\\nvariable (P : Potential) (\\u03a61 \\u03a62 : HiggsField)\\n\\n/-- The potential of the two Higgs doublet model. -/\\ndef toFun (\\u03a61 \\u03a62 : HiggsField) (x : SpaceTime) : \\u211d :=\\n  P.m\\u2081\\u20812 * \\u2016\\u03a61\\u2016_H^2 x + P.m\\u2082\\u20822 * \\u2016\\u03a62\\u2016_H^2 x -\\n  (P.m\\u2081\\u20822 * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.m\\u2081\\u20822 * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n  + 1/2 * P.\\ud835\\udcf5\\u2081 * \\u2016\\u03a61\\u2016_H^2 x * \\u2016\\u03a61\\u2016_H^2 x + 1/2 * P.\\ud835\\udcf5\\u2082 * \\u2016\\u03a62\\u2016_H^2 x * \\u2016\\u03a62\\u2016_H^2 x\\n  + P.\\ud835\\udcf5\\u2083 * \\u2016\\u03a61\\u2016_H^2 x * \\u2016\\u03a62\\u2016_H^2 x\\n  + P.\\ud835\\udcf5\\u2084 * \\u2016\\u27ea\\u03a61, \\u03a62\\u27eb_H x\\u2016 ^ 2\\n  + (1/2 * P.\\ud835\\udcf5\\u2085 * \\u27ea\\u03a61, \\u03a62\\u27eb_H x ^ 2 + 1/2 * conj P.\\ud835\\udcf5\\u2085 * \\u27ea\\u03a62, \\u03a61\\u27eb_H x ^ 2).re\\n  + (P.\\ud835\\udcf5\\u2086 * \\u2016\\u03a61\\u2016_H^2 x * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.\\ud835\\udcf5\\u2086 * \\u2016\\u03a61\\u2016_H^2 x * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n  + (P.\\ud835\\udcf5\\u2087 * \\u2016\\u03a62\\u2016_H^2 x * \\u27ea\\u03a61, \\u03a62\\u27eb_H x + conj P.\\ud835\\udcf5\\u2087 * \\u2016\\u03a62\\u2016_H^2 x * \\u27ea\\u03a62, \\u03a61\\u27eb_H x).re\\n\\n/-- The potential where all parameters are zero. -/\\ndef zero : Potential := \\u27e80, 0, 0, 0, 0, 0, 0, 0, 0, 0\\u27e9\\n\"}\n\n{\"cmd\": \"lemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, Complex.add_re, Complex.mul_re, Complex.conj_re, Complex.conj_im,\\n    neg_mul, sub_neg_eq_add, one_div, Complex.norm_eq_abs, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, mul_neg, Complex.ofReal_pow, normSq_apply_re_self,\\n    normSq_apply_im_zero, mul_zero, zero_add, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n  ring_nf\\n  simp only [one_div, add_left_inj, add_right_inj, mul_eq_mul_left_iff]\\n  left\\n  rw [HiggsField.innerProd, HiggsField.innerProd, \\u2190 InnerProductSpace.conj_symm, Complex.abs_conj]\\n\\n/-- If `\\u03a6\\u2082` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2081`. -/\\nlemma right_zero : P.toFun \\u03a61 0 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_zero, Pi.zero_apply, norm_zero, ne_eq,\\n    OfNat.ofNat_ne_zero, not_false_eq_true, zero_pow, mul_zero, add_zero, innerProd_right_zero,\\n    innerProd_left_zero, Complex.zero_re, sub_zero, one_div, Complex.ofReal_pow,\\n    Complex.ofReal_zero, neg_neg, add_right_inj, mul_eq_mul_right_iff, pow_eq_zero_iff,\\n    norm_eq_zero, HiggsField.Potential.toFun, or_self_right]\\n  ring_nf\\n  simp only [true_or]\\n\\n/-- If `\\u03a6\\u2081` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2082`. -/\\nlemma left_zero : P.toFun 0 \\u03a62 =\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).toFun \\u03a62 := by\\n  rw [swap_fields, right_zero]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_left : P.toFun (- \\u03a61) \\u03a62\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_neg, Pi.neg_apply, norm_neg,\\n    innerProd_neg_left, mul_neg, innerProd_neg_right, Complex.add_re, Complex.neg_re,\\n    Complex.mul_re, neg_sub, Complex.conj_re, Complex.conj_im, neg_mul, sub_neg_eq_add, neg_add_rev,\\n    one_div, Complex.norm_eq_abs, even_two, Even.neg_pow, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, Complex.ofReal_pow, map_neg]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_right : P.toFun \\u03a61 (- \\u03a62)\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  rw [swap_fields, neg_left, swap_fields]\\n  simp only [map_neg, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n\\n\\nlemma left_eq_right : P.toFun \\u03a61 \\u03a61 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 + 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re + 2 * P.\\ud835\\udcf5\\u2086.re + 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61  := by\\n  funext x\\n  simp only [toFun, normSq, innerProd_self_eq_normSq, Complex.add_re, mul_zero, sub_zero, one_div, HiggsField.Potential.toFun]\\n  ring_nf\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}\n\n{\"cmd\": \"lemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, Complex.add_re, Complex.mul_re, Complex.conj_re, Complex.conj_im,\\n    neg_mul, sub_neg_eq_add, one_div, Complex.norm_eq_abs, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, mul_neg, Complex.ofReal_pow, normSq_apply_re_self,\\n    normSq_apply_im_zero, mul_zero, zero_add, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n  ring_nf\\n  simp only [one_div, add_left_inj, add_right_inj, mul_eq_mul_left_iff]\\n  left\\n  rw [HiggsField.innerProd, HiggsField.innerProd, \\u2190 InnerProductSpace.conj_symm, Complex.abs_conj]\\n\\n/-- If `\\u03a6\\u2082` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2081`. -/\\nlemma right_zero : P.toFun \\u03a61 0 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_zero, Pi.zero_apply, norm_zero, ne_eq,\\n    OfNat.ofNat_ne_zero, not_false_eq_true, zero_pow, mul_zero, add_zero, innerProd_right_zero,\\n    innerProd_left_zero, Complex.zero_re, sub_zero, one_div, Complex.ofReal_pow,\\n    Complex.ofReal_zero, neg_neg, add_right_inj, mul_eq_mul_right_iff, pow_eq_zero_iff,\\n    norm_eq_zero, HiggsField.Potential.toFun, or_self_right]\\n  ring_nf\\n  simp only [true_or]\\n\\n/-- If `\\u03a6\\u2081` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2082`. -/\\nlemma left_zero : P.toFun 0 \\u03a62 =\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).toFun \\u03a62 := by\\n  rw [swap_fields, right_zero]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_left : P.toFun (- \\u03a61) \\u03a62\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_neg, Pi.neg_apply, norm_neg,\\n    innerProd_neg_left, mul_neg, innerProd_neg_right, Complex.add_re, Complex.neg_re,\\n    Complex.mul_re, neg_sub, Complex.conj_re, Complex.conj_im, neg_mul, sub_neg_eq_add, neg_add_rev,\\n    one_div, Complex.norm_eq_abs, even_two, Even.neg_pow, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, Complex.ofReal_pow, map_neg]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_right : P.toFun \\u03a61 (- \\u03a62)\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  rw [swap_fields, neg_left, swap_fields]\\n  simp only [map_neg, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n\\n\\nlemma left_eq_right : P.toFun \\u03a61 \\u03a61 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 + 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re + 2 * P.\\ud835\\udcf5\\u2086.re + 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61  := by\\n  funext x\\n  simp only [toFun, normSq, innerProd_self_eq_normSq, Complex.ofReal_pow, Complex.add_re,\\n    Complex.mul_re, normSq_apply_re_self, normSq_apply_im_zero, mul_zero, sub_zero, Complex.conj_re,\\n    Complex.conj_im, one_div, norm_pow, Complex.norm_real, norm_norm, Complex.inv_re,\\n    Complex.re_ofNat, Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat,\\n    neg_zero, zero_div, zero_mul, Complex.mul_im, add_zero, mul_neg, neg_mul, sub_neg_eq_add,\\n    sub_add_add_cancel, zero_add, HiggsField.Potential.toFun, neg_add_rev, neg_sub]\\n  ring_nf\\n  erw [\\u2190 Complex.ofReal_pow, show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 4).re = \\u2016\\u03a61 x\\u2016 ^ 4 by rfl]\\n  erw [\\u2190 Complex.ofReal_pow, show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 2).re = \\u2016\\u03a61 x\\u2016 ^ 2 by rfl]\\n  erw [show (Complex.ofRealHom \\u2016\\u03a61 x\\u2016 ^ 2).im = 0 by exact normSq_apply_im_zero \\u03a61 x]\\n  ring\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}\n\n{\"cmd\": \"lemma swap_fields : P.toFun \\u03a61 \\u03a62 =\\n    (Potential.mk P.m\\u2082\\u20822 P.m\\u2081\\u20812 (conj P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084\\n    (conj P.\\ud835\\udcf5\\u2085) (conj P.\\ud835\\udcf5\\u2087) (conj P.\\ud835\\udcf5\\u2086)).toFun \\u03a62 \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, Complex.add_re, Complex.mul_re, Complex.conj_re, Complex.conj_im,\\n    neg_mul, sub_neg_eq_add, one_div, Complex.norm_eq_abs, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, mul_neg, Complex.ofReal_pow, normSq_apply_re_self,\\n    normSq_apply_im_zero, mul_zero, zero_add, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n  ring_nf\\n  simp only [one_div, add_left_inj, add_right_inj, mul_eq_mul_left_iff]\\n  left\\n  rw [HiggsField.innerProd, HiggsField.innerProd, \\u2190 InnerProductSpace.conj_symm, Complex.abs_conj]\\n\\n/-- If `\\u03a6\\u2082` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2081`. -/\\nlemma right_zero : P.toFun \\u03a61 0 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812) (P.\\ud835\\udcf5\\u2081/2)).toFun \\u03a61 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_zero, Pi.zero_apply, norm_zero, ne_eq,\\n    OfNat.ofNat_ne_zero, not_false_eq_true, zero_pow, mul_zero, add_zero, innerProd_right_zero,\\n    innerProd_left_zero, Complex.zero_re, sub_zero, one_div, Complex.ofReal_pow,\\n    Complex.ofReal_zero, neg_neg, add_right_inj, mul_eq_mul_right_iff, pow_eq_zero_iff,\\n    norm_eq_zero, HiggsField.Potential.toFun, or_self_right]\\n  ring_nf\\n  simp only [true_or]\\n\\n/-- If `\\u03a6\\u2081` is zero the potential reduces to the Higgs potential on `\\u03a6\\u2082`. -/\\nlemma left_zero : P.toFun 0 \\u03a62 =\\n    (HiggsField.Potential.mk (- P.m\\u2082\\u20822) (P.\\ud835\\udcf5\\u2082/2)).toFun \\u03a62 := by\\n  rw [swap_fields, right_zero]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_left : P.toFun (- \\u03a61) \\u03a62\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  funext x\\n  simp only [toFun, normSq, ContMDiffSection.coe_neg, Pi.neg_apply, norm_neg,\\n    innerProd_neg_left, mul_neg, innerProd_neg_right, Complex.add_re, Complex.neg_re,\\n    Complex.mul_re, neg_sub, Complex.conj_re, Complex.conj_im, neg_mul, sub_neg_eq_add, neg_add_rev,\\n    one_div, Complex.norm_eq_abs, even_two, Even.neg_pow, Complex.inv_re, Complex.re_ofNat,\\n    Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div,\\n    zero_mul, sub_zero, Complex.mul_im, add_zero, Complex.ofReal_pow, map_neg]\\n\\n/-- Negating `\\u03a6\\u2081` is equivalent to negating `m\\u2081\\u20822`, `\\ud835\\udcf5\\u2086` and `\\ud835\\udcf5\\u2087`. -/\\nlemma neg_right : P.toFun \\u03a61 (- \\u03a62)\\n    = (Potential.mk P.m\\u2081\\u20812 P.m\\u2082\\u20822 (- P.m\\u2081\\u20822) P.\\ud835\\udcf5\\u2081 P.\\ud835\\udcf5\\u2082 P.\\ud835\\udcf5\\u2083 P.\\ud835\\udcf5\\u2084 P.\\ud835\\udcf5\\u2085 (- P.\\ud835\\udcf5\\u2086) (- P.\\ud835\\udcf5\\u2087)).toFun\\n    \\u03a61 \\u03a62 := by\\n  rw [swap_fields, neg_left, swap_fields]\\n  simp only [map_neg, RingHomCompTriple.comp_apply, RingHom.id_apply]\\n\\n\\nlemma left_eq_right : P.toFun \\u03a61 \\u03a61 =\\n    (HiggsField.Potential.mk (- P.m\\u2081\\u20812 - P.m\\u2082\\u20822 + 2 * P.m\\u2081\\u20822.re)\\n    (P.\\ud835\\udcf5\\u2081/2 + P.\\ud835\\udcf5\\u2082/2 + P.\\ud835\\udcf5\\u2083 + P.\\ud835\\udcf5\\u2084 + P.\\ud835\\udcf5\\u2085.re + 2 * P.\\ud835\\udcf5\\u2086.re + 2 * P.\\ud835\\udcf5\\u2087.re)).toFun \\u03a61  := by\\n  funext x\\n  simp only [toFun, normSq, innerProd_self_eq_normSq, Complex.ofReal_pow, Complex.add_re, Complex.mul_re, normSq_apply_re_self, normSq_apply_im_zero, mul_zero, sub_zero, Complex.conj_re, Complex.conj_im, one_div, norm_pow, Complex.norm_real, norm_norm, Complex.inv_re, Complex.re_ofNat, Complex.normSq_ofNat, div_self_mul_self', Complex.inv_im, Complex.im_ofNat, neg_zero, zero_div, zero_mul, Complex.mul_im, add_zero, mul_neg, neg_mul, sub_neg_eq_add, sub_add_add_cancel, zero_add, HiggsField.Potential.toFun, neg_add_rev, neg_sub]\\n  ring_nf\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 4).re = \\u2016\\u03a61 x\\u2016 ^ 4 by erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show ((Complex.ofRealHom \\u2016\\u03a61 x\\u2016) ^ 2).re = \\u2016\\u03a61 x\\u2016 ^ 2 by erw [\\u2190 Complex.ofReal_pow]; rfl]\\n  erw [show (Complex.ofRealHom \\u2016\\u03a61 x\\u2016 ^ 2).im = 0 by exact normSq_apply_im_zero \\u03a61 x]\\n  ring\\n\", \"allTactics\": true, \"theorems\": true, \"env\": 0}"}]