{"cmd": "/- Copyright 2023 Daniel J. Velleman -/\n\nimport HTPILib.IntroLean\nnamespace HTPI\n\n/- Definitions -/\ndef even (n : Int) : Prop := \u2203 (k : Int), n = 2 * k\n\ndef odd (n : Int) : Prop := \u2203 (k : Int), n = 2 * k + 1\n\n/- Sections 3.1 and 3.2 -/"}

{"cmd": "theorem Example_3_2_4_v2 (P Q R : Prop)\n    (h : P \u2192 (Q \u2192 R)) : \u00acR \u2192 (P \u2192 \u00acQ) := by\n  assume h2 : \u00acR\n  assume h3 : P\n  by_contra h4\n  have h5 : Q \u2192 R := h h3\n  have h6 : R := h5 h4\n  show False from h2 h6\n  done\n\ntheorem Example_3_2_4_v3 (P Q R : Prop)\n    (h : P \u2192 (Q \u2192 R)) : \u00acR \u2192 (P \u2192 \u00acQ) := by\n  assume h2 : \u00acR\n  assume h3 : P\n  by_contra h4\n  contradict h2\n  show R from h h3 h4\n  done\n\ntheorem Like_Example_3_2_5\n    (U : Type) (A B C : Set U) (a : U)\n    (h1 : a \u2208 A) (h2 : a \u2209 A \\ B)\n    (h3 : a \u2208 B \u2192 a \u2208 C) : a \u2208 C := by\n  apply h3 _\n  define at h2\n  demorgan at h2; conditional at h2\n  show a \u2208 B from h2 h1\n  done\n\n/- Section 3.3 -/\nexample (U : Type) (P Q : Pred U)\n    (h1 : \u2200 (x : U), P x \u2192 \u00acQ x)\n    (h2 : \u2200 (x : U), Q x) :\n    \u00ac\u2203 (x : U), P x := by\n  quant_neg     --Goal is now \u2200 (x : U), \u00acP x\n  fix y : U\n  have h3 : P y \u2192 \u00acQ y := h1 y\n  have h4 : Q y := h2 y\n  contrapos at h3  --Now h3 : Q y \u2192 \u00acP y\n  show \u00acP y from h3 h4\n  done\n\nexample (U : Type) (A B C : Set U) (h1 : A \u2286 B \u222a C)\n    (h2 : \u2200 (x : U), x \u2208 A \u2192 x \u2209 B) : A \u2286 C := by\n  define  --Goal : \u2200 \u2983a : U\u2984, a \u2208 A \u2192 a \u2208 C\n  fix y : U\n  assume h3 : y \u2208 A\n  have h4 : y \u2209 B := h2 y h3\n  define at h1  --h1 : \u2200 \u2983a : U\u2984, a \u2208 A \u2192 a \u2208 B \u222a C\n  have h5 : y \u2208 B \u222a C := h1 h3\n  define at h5  --h5 : y \u2208 B \u2228 y \u2208 C\n  conditional at h5  --h5 : \u00acy \u2208 B \u2192 y \u2208 C\n  show y \u2208 C from h5 h4\n  done\n\nexample (U : Type) (P Q : Pred U)\n    (h1 : \u2200 (x : U), \u2203 (y : U), P x \u2192 \u00ac Q y)\n    (h2 : \u2203 (x : U), \u2200 (y : U), P x \u2192 Q y) :\n    \u2203 (x : U), \u00acP x := by\n  obtain (a : U)\n    (h3 : \u2200 (y : U), P a \u2192 Q y) from h2\n  have h4 : \u2203 (y : U), P a \u2192 \u00ac Q y := h1 a\n  obtain (b : U) (h5 : P a \u2192 \u00ac Q b) from h4\n  have h6 : P a \u2192 Q b := h3 b\n  apply Exists.intro a _\n  by_contra h7\n  show False from h5 h7 (h6 h7)\n  done\n\ntheorem Example_3_3_5 (U : Type) (B : Set U)\n    (F : Set (Set U)) : \u22c3\u2080 F \u2286 B \u2192 F \u2286 \ud835\udcab B := by\n  assume h1 : \u22c3\u2080 F \u2286 B\n  define\n  fix x : Set U\n  assume h2 : x \u2208 F\n  define\n  fix y : U\n  assume h3 : y \u2208 x\n  define at h1\n  apply h1 _\n  define\n  apply Exists.intro x _\n  show x \u2208 F \u2227 y \u2208 x from And.intro h2 h3\n  done\n\n/- Section 3.4 -/\ntheorem Like_Example_3_4_1 (U : Type)\n    (A B C D : Set U) (h1 : A \u2286 B)\n    (h2 : \u00ac\u2203 (c : U), c \u2208 C \u2229 D) :\n    A \u2229 C \u2286 B \\ D := by\n  define\n  fix x : U\n  assume h3 : x \u2208 A \u2229 C\n  define at h3; define\n  apply And.intro\n  \u00b7 -- Proof that x \u2208 B.\n    show x \u2208 B from h1 h3.left\n    done\n  \u00b7 -- Proof that x \u2209 D.\n    contradict h2 with h4\n    apply Exists.intro x\n    show x \u2208 C \u2229 D from And.intro h3.right h4\n    done\n  done\n\n\nexample (U : Type) (P Q : Pred U)\n    (h1 : \u2200 (x : U), P x \u2194 Q x) :\n    (\u2203 (x : U), P x) \u2194 \u2203 (x : U), Q x   := by\n  rw [exists_congr h1]\n", "allTactics": true, "theorems": true, "env": 0}