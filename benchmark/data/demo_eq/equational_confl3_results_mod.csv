repo,file,decl,method,n,metric,model,annotation,syntax_search,mathlib_search,examples,improved_context,og_correct,og_errors,og_score,new_correct,new_errors,new_score,delta,og_raw,new_raw,time
equational_theories,equational_theories/Confluence3.lean,"instance: IsProjOrNF (rules : FreeMagma α → _) where
  proj_or_nf ","refinement(best_of_n_n(prompt_flat), prev_data_num=1, keep_best=True)",5,MODULARITY,gpt-4o,True,True,True,10,True,True,,0.0,True,,0.0,,"
instance: IsProjOrNF (rules : FreeMagma α → _) where
  proj_or_nf  := by
    intro x
    generalize h: rules x = e
    simp only [rules.elim] at h
    separate
    · left
      subterm
    · left
      subterm
    · right
      simp only [NF, Everywhere, and_self_left]
      constructor
      · simp [rules, rules.rule1, rules.rule2, rules.rule3]
      · apply rules.eq3
    · left
      rfl","
instance: IsProjOrNF (rules : FreeMagma α → _) where
  proj_or_nf  := by
    intro x
    generalize h: rules x = e
    simp only [rules.elim] at h
    separate
    · left
      subterm
    · left
      subterm
    · right
      simp only [NF, Everywhere, and_self_left]
      constructor
      · simp [rules, rules.rule1, rules.rule2, rules.rule3]
      · apply rules.eq3
    · left
      rfl",68.40795803070068
equational_theories,equational_theories/Confluence3.lean,"theorem comp1_2 {x y : FreeMagma α} (hx: NF rules x):
    rules (y ⋆ rules (x ⋆ (y ⋆ (default ⋆ default)))) = x ","refinement(best_of_n_n(prompt_flat), prev_data_num=1, keep_best=True)",5,MODULARITY,gpt-4o,True,True,True,10,True,True,,0.0,True,,0.0,,"
theorem comp1_2 {x y : FreeMagma α} (hx: NF rules x):
    rules (y ⋆ rules (x ⋆ (y ⋆ (default ⋆ default)))) = x  := by
  generalize h: rules (x ⋆ (y ⋆ (default ⋆ default))) = e
  simp only [rules.elim] at h
  separate
  · apply rules.eq3
  · apply hx.top
  · apply rules.eq1","
theorem comp1_2 {x y : FreeMagma α} (hx: NF rules x):
    rules (y ⋆ rules (x ⋆ (y ⋆ (default ⋆ default)))) = x  := by
  generalize h: rules (x ⋆ (y ⋆ (default ⋆ default))) = e
  simp only [rules.elim] at h
  separate
  · apply rules.eq3
  · apply hx.top
  · apply rules.eq1",65.75971913337708
equational_theories,equational_theories/Confluence3.lean,"theorem comp2_2 {x : FreeMagma α} (hx: NF rules x):
    rules (default ⋆ default ⋆ rules (x ⋆ (default ⋆ default))) = x ","refinement(best_of_n_n(prompt_flat), prev_data_num=1, keep_best=True)",5,MODULARITY,gpt-4o,True,True,True,10,True,True,,0.0,True,,0.0,,"
theorem comp2_2 {x : FreeMagma α} (hx: NF rules x):
    rules (default ⋆ default ⋆ rules (x ⋆ (default ⋆ default))) = x  := by
  generalize h: rules (x ⋆ (default ⋆ default)) = e
  simp only [rules.elim] at h
  separate
  · apply rules.eq3
  · apply rules.eq2","
theorem comp2_2 {x : FreeMagma α} (hx: NF rules x):
    rules (default ⋆ default ⋆ rules (x ⋆ (default ⋆ default))) = x  := by
  generalize h: rules (x ⋆ (default ⋆ default)) = e
  simp only [rules.elim] at h
  separate
  · apply rules.eq3
  · apply rules.eq2",68.04440116882324
equational_theories,equational_theories/Confluence3.lean,"theorem comp1_3 {x y : FreeMagma α} (hx: NF rules x):
    rules (y ⋆ rules (x ⋆ rules (y ⋆ (default ⋆ default)))) = x ","refinement(best_of_n_n(prompt_flat), prev_data_num=1, keep_best=True)",5,MODULARITY,gpt-4o,True,True,True,10,True,True,,0.0,True,,0.2857142857142857,,"
theorem comp1_3 {x y : FreeMagma α} (hx: NF rules x):
    rules (y ⋆ rules (x ⋆ rules (y ⋆ (default ⋆ default)))) = x  := by
  generalize h: rules (y ⋆ (default ⋆ default)) = e
  simp only [rules.elim] at h
  separate
  · apply comp2_2 hx
  · apply comp1_2 hx","
theorem comp1_3 {x y : FreeMagma α} (hx: NF rules x):
    rules (y ⋆ rules (x ⋆ rules (y ⋆ (default ⋆ default)))) = x   := by
  generalize h: rules (y ⋆ (default ⋆ default)) = e
  simp only [rules.elim] at h
  separate
  have : rules (default ⋆ default ⋆ rules (x ⋆ (default ⋆ default))) = x := by
    apply comp2_2 hx
  exact this
  have : rules (y ⋆ rules (x ⋆ (y ⋆ (default ⋆ default)))) = x := by
    apply comp1_2 hx
  exact this",136.42616891860962
equational_theories,equational_theories/Confluence3.lean,"theorem comp1_4 {x y z : FreeMagma α} (hx: NF rules x):
    rules (y ⋆ rules (x ⋆ rules (y ⋆ rules (z ⋆ z)))) = x ","refinement(best_of_n_n(prompt_flat), prev_data_num=1, keep_best=True)",5,MODULARITY,gpt-4o,True,True,True,10,True,True,,0.0,True,,0.0,,"
theorem comp1_4 {x y z : FreeMagma α} (hx: NF rules x):
    rules (y ⋆ rules (x ⋆ rules (y ⋆ rules (z ⋆ z)))) = x  := by
  generalize h: rules (z ⋆ z) = e
  simp only [rules.elim] at h
  separate
  · apply comp1_3 hx
  · exfalso
    simp_all only [Fork.injEq, not_exists, not_and, exists_eq', not_true_eq_false]","
theorem comp1_4 {x y z : FreeMagma α} (hx: NF rules x):
    rules (y ⋆ rules (x ⋆ rules (y ⋆ rules (z ⋆ z)))) = x  := by
  generalize h: rules (z ⋆ z) = e
  simp only [rules.elim] at h
  separate
  · apply comp1_3 hx
  · exfalso
    simp_all only [Fork.injEq, not_exists, not_and, exists_eq', not_true_eq_false]",87.06756711006165
equational_theories,equational_theories/Confluence3.lean,"@[equational_result]
theorem «Facts» :
  ∃ (G : Type) (_ : Magma G), Facts G [481] [1488, 1492, 1496, 2035, 2038, 2041, 2124, 2128, 2132, 2135, 3050, 3056, 3139, 3150, 3161] ","refinement(best_of_n_n(prompt_flat), prev_data_num=1, keep_best=True)",5,MODULARITY,gpt-4o,True,True,True,10,True,True,,0.0,True,,0.0,,"
@[equational_result]
theorem «Facts» :
  ∃ (G : Type) (_ : Magma G), Facts G [481] [1488, 1492, 1496, 2035, 2038, 2041, 2124, 2128, 2132, 2135, 3050, 3056, 3139, 3150, 3161]  := by
  use ConfMagma (@rules Nat _ _), inferInstance
  repeat' apply And.intro
  · rintro ⟨x, hx⟩ ⟨y, hy⟩ ⟨z, hz⟩
    simp (disch := bufixed) only [Magma.op, bu, hx, hy, hz, buFixed_rw_op]
    symm
    congr! 1
    apply comp1_4 ((NF_iff_buFixed rules).mpr hx)
  all_goals refute","
@[equational_result]
theorem «Facts» :
  ∃ (G : Type) (_ : Magma G), Facts G [481] [1488, 1492, 1496, 2035, 2038, 2041, 2124, 2128, 2132, 2135, 3050, 3056, 3139, 3150, 3161]  := by
  use ConfMagma (@rules Nat _ _), inferInstance
  repeat' apply And.intro
  · rintro ⟨x, hx⟩ ⟨y, hy⟩ ⟨z, hz⟩
    simp (disch := bufixed) only [Magma.op, bu, hx, hy, hz, buFixed_rw_op]
    symm
    congr! 1
    apply comp1_4 ((NF_iff_buFixed rules).mpr hx)
  all_goals refute",81.11612510681152
