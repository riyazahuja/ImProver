
{"cmd": "import Tests.Common\nimport Mathlib.Data.Real.Basic\nnamespace C03S06\n\ndef ConvergesTo (s : ℕ → ℝ) (a : ℝ) :=\n  ∀ ε > 0, ∃ N, ∀ n ≥ N, |s n - a| < ε"}



{"cmd": "theorem convergesTo_const (a : \u211d) : ConvergesTo (fun x : \u2115 \u21a6 a) a := by\n  intro \u03b5 \u03b5pos\n  use 0\n  intro n nge\n  rw [sub_self, abs_zero]\n  apply \u03b5pos\n\n\ntheorem convergesTo_add {s t : \u2115 \u2192 \u211d} {a b : \u211d}\n      (cs : ConvergesTo s a) (ct : ConvergesTo t b) :\n    ConvergesTo (fun n \u21a6 s n + t n) (a + b)  := by\n  intro \u03b5 \u03b5pos\n  have : 0 < \u03b5 / 2 := by linarith\n  rcases cs (\u03b5 / 2) this with \u27e8Ns, hs\u27e9\n  rcases ct (\u03b5 / 2) this with \u27e8Nt, ht\u27e9\n  use max Ns Nt\n  intro n hn\n  calc\n  |s n + t n - (a + b)| = |s n - a + (t n - b)| := by ring\n  _ \u2264 |s n - a| + |t n - b| := abs_add _ _\n  _ < \u03b5 / 2 + \u03b5 / 2 := add_lt_add (hs n (le_of_max_le_left hn)) (ht n (le_of_max_le_right hn))\n  _ = \u03b5 := by norm_num\n", "allTactics": true, "theorems": true, "env": 0}